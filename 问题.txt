1、top字段的具体含义及关系？
	top-是一个提供动态实时的可视化系统，包括CPU、内存、缓存的利用率、总的任务数和现在的状态、负载情况等。
    具体情况如下：
    1- top - 09:28:42 up  1:41,  2 users,  load average: 0.10, 0.04, 0.05
    2- Tasks: 169 total,   1 running, 168 sleeping,   0 stopped,   0 zombie
    3- %Cpu(s):  0.2 us,  0.2 sy,  0.0 ni, 98.6 id,  1.0 wa,  0.0 hi,  0.0 si,  0.0 st
    4- KiB Mem:   5088472 total,  1225680 used,  3862792 free,    91424 buffers
    5- KiB Swap:        0 total,        0 used,        0 free.   520112 cached Mem

      PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
     5105 pwd006    20   0   26232   2792   2420 R   6.1  0.1   0:00.01 top
        1 root      20   0  323588   5040   3116 S   0.0  0.1   0:01.77 systemd
        2 root      20   0       0      0      0 S   0.0  0.0   0:00.01 kthreadd
  第1行：
    09:28:42 -当前时间 ； 1:41-运行时间；2 users-2个使用者, 
    load average: 0.10, 0.04, 0.05 - 1分钟、5分钟、15分钟的负载情况
  第2行：不解释；
  第3行：
　   us — 用户空间占用CPU的百分比。
　　 sy — 内核空间占用CPU的百分比。
　　 ni — 改变过优先级的进程占用CPU的百分比
　　 id — 空闲CPU百分比
　　 wa — IO等待占用CPU的百分比
　　 hi — 硬中断（Hardware IRQ）占用CPU的百分比
　　 si — 软中断（Software Interrupts）占用CPU的百分比
   
   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
    
    PID — 进程id
　　USER — 进程所有者
　　PR — 进程优先级
　　NI — nice值。负值表示高优先级，正值表示低优先级
　　VIRT — 进程使用的虚拟内存总量，单位kb。
　　RES — 进程使用的、未被换出的物理内存大小，单位kb。
　　SHR — 共享内存大小，单位kb
　　S — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程
　　%CPU — 上次更新到现在的CPU时间占用百分比
　　%MEM — 进程使用的物理内存百分比
　　TIME+ — 进程使用的CPU时间总计，单位1/100秒
　　COMMAND — 进程名称（命令名/命令行）
  常用的命令：
      d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s
      q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行
      c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称S : 累积模式，会将己完成或消失的子行程 的 CPU time 累积起来
      s : 安全模式，将交谈式指令取消, 避免潜在的危机
      i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程
      n : 更新的次数，完成后将会退出 top
      b : 批次档模式，搭配 "n" 参数一起使用，可以用来将 top 的结果输出到档案内
  一些特殊用法
    1.在多核CPU监控
      在top基本视图中，按键盘数字“1”，可监控每个逻辑CPU的状况（不是物理CPU）
    2.高亮显示当前运行进程敲击键盘“b”（打开/关闭加亮效果）
  范例：
    显示更新十次后退出 ;
    top -n 10
    使用者将不能利用交谈式指令来对行程下命令 :
    top -s
    将更新显示二次的结果输入到名称为 top.log 的档案里 :
    top -n 2 -b < top.log
2、top命令如何看进程下跑多少个线程？
	   top -H -p pid

     top - 17:11:08 up  9:17,  3 users,  load average: 0.12, 0.13, 0.08

    Threads:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie
    %Cpu(s): 10.1 us,  2.5 sy,  0.0 ni, 87.2 id,  0.1 wa,  0.0 hi,  0.1 si,  0.0 st
    KiB Mem:   5088472 total,  1361536 used,  3726936 free,    97416 buffers
    KiB Swap:        0 total,        0 used,        0 free.   580716 cached Mem

    PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                     
    8741 root      20   0       0      0      0 S  0.0  0.0   0:02.44 kworker/1:2  


3、mount指令可以挂载那些文件系统？
	NTFS ext3 ext4 ISO-9660

4、查看父目录下最大或最小文件？
   ls -R -a | du -a | sort -rg | head -n 2 
   ls -R -a | du -a | sort -rg | tail -n 1 
   
5、find命令查看时间三个time的区别？
  -atime n   /访问
              File  was last accessed n*24 hours ago.  When find figures out how many 24-hour
              periods ago the file was last accessed, any fractional part is ignored,  so  to
              match -atime +1, a file has to have been accessed at least two days ago.
  -ctime n  //改变
              File's  status was last changed n*24 hours ago.  See the comments for -atime to
              understand how rounding affects the interpretation of file status change times.
  -mtime n  //修改
              File's data was last modified n*24 hours ago.  See the comments for  -atime  to
              understand how rounding affects the interpretation of file modification times.


6、grep命令查找大于或小于的字符的行数？
	
7、Rsync用法？
  rsync- 镜像备份
       Local:  rsync [OPTION...] SRC... [DEST]

       Access via remote shell:
         Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]
         Push: rsync [OPTION...] SRC... [USER@]HOST:DEST

       Access via rsync daemon:
         Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
               rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
         Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
               rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST
      -v, --verbose 详细模式输出
      -q, --quiet 精简输出模式
      -c, --checksum 打开校验开关，强制对文件传输进行校验
      -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD
      -r, --recursive 对子目录以递归模式处理
      -R, --relative 使用相对路径信息
      -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。
      --backup-dir 将备份文件(如~filename)存放在在目录下。
      -suffix=SUFFIX 定义备份文件前缀
      -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)
      -l, --links 保留软链结
      -L, --copy-links 想对待常规文件一样处理软链结
      --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结
      --safe-links 忽略指向SRC路径目录树以外的链结
      -H, --hard-links 保留硬链结
      -p, --perms 保持文件权限
      -o, --owner 保持文件属主信息
      -g, --group 保持文件属组信息
      -D, --devices 保持设备文件信息
      -t, --times 保持文件时间信息
      -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间
      -n, --dry-run现实哪些文件将被传输
      -W, --whole-file 拷贝文件，不进行增量检测
      -x, --one-file-system 不要跨越文件系统边界
      -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节
      -e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步
      --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息
      -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件
      --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件
      --delete 删除那些DST中SRC没有的文件
      --delete-excluded 同样删除接收端那些被该选项指定排除的文件
      --delete-after 传输结束以后再删除
      --ignore-errors 及时出现IO错误也进行删除
      --max-delete=NUM 最多删除NUM个文件
      --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输
      --force 强制删除目录，即使不为空
      --numeric-ids 不将数字的用户和组ID匹配为用户名和组名
      --timeout=TIME IP超时时间，单位为秒
      -I, --ignore-times 不跳过那些有同样的时间和长度的文件
      --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间
      --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0
      -T --temp-dir=DIR 在DIR中创建临时文件
      --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份
      -P 等同于 --partial
      --progress 显示备份过程
      -z, --compress 对备份的文件在传输时进行压缩处理
      --exclude=PATTERN 指定排除不需要传输的文件模式
      --include=PATTERN 指定不排除而需要传输的文件模式
      --exclude-from=FILE 排除FILE中指定模式的文件
      --include-from=FILE 不排除FILE指定模式匹配的文件
      --version 打印版本信息
      --address 绑定到特定的地址
      --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件
      --port=PORT 指定其他的rsync服务端口
      --blocking-io 对远程shell使用阻塞IO
      -stats 给出某些文件的传输状态
      --progress 在传输时现实传输过程
      --log-format=formAT 指定日志文件格式
      --password-file=FILE 从FILE中得到密码
      --bwlimit=KBPS 限制I/O带宽，KBytes per second
8、ps -eLf | grep java | wc -l是有问题的？
  默认ps -eLf | grep java  是没有的 ， wc -l 却统计了1  

9、如何自动生成.o文件？
	
10、.PHONY:clean有什么用？
	伪目标，为了避免和文件重名的这种情况