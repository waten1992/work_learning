读代码大全语句章节

组织线性代码代码：
	1-要明确依赖关系；
	2-对不清晰的依赖关系进行说明和注释

顺序无关的语句：
	1-使代码易于自上而下的阅读；
	2-把相关的语句组织在一起；

使用条件语句：
	1-首先写正常的语句路径，在处理不常见的情况；
	2-确保对于等量的分支是正确的，在使用 > 还是 >= 要想清楚，推荐使用>= ；
	3-把正常的处理情况，放在if 后面；
	4-让if 后面跟着有意义的语句；
	5-把最常见的情况放在最前面；

case 语句：
	1-为case 选择最有效的排列顺序： 按照字母、数值的顺序来排列；
	2-把正常情况放在前面；
	3-利用default 来检测错误

for 循环：
	1-都用 { } 把循环语句括起来；
	2-避免空循环；
	3-一个循环只做一件事情；
	4-使得循环下标看起来变得明显；
	5-避免使用循环终止时的下标，可以用bool 变量来标记；
	6-可以使用 安全计数器，确保不越界；
退出循环：
	1-在while 中使用break 语句而不是用bool 标记；
使用循环变量：
	1-在嵌套循环中使用有意义的下标变量名提高可读性，而非i j k；
	2-把下标的变量的作用域限制在本循环内内部； 在编译的时候需要加上 -std=gnu11
递归的使用：
	1-尽量不用递归；
	2-如果要用，就要确认是程序是否能正常停止；
	3-使用安全计数器防止无穷的递归；
	4-把递归限制在一个子程序中；
	5-小心栈空间溢出；
	6-不要用递归去计算阶乘和斐波纳契：用迭代
关于goto 的观点：
	1-尽量少用goto ;

表驱动方法：
	1-直接访问；
	2-索引访问；
	3-阶梯访问；
	

